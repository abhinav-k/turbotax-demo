{"version":3,"sources":["../src/index.ts","../src/temporal.ts"],"sourcesContent":["import type {\n  StateCreator,\n  StoreMutatorIdentifier,\n  Mutate,\n  StoreApi,\n} from 'zustand';\nimport { createVanillaTemporal } from './temporal';\nimport type { TemporalState, Write, ZundoOptions } from './types';\n\ntype Zundo = <\n  TState,\n  Mps extends [StoreMutatorIdentifier, unknown][] = [],\n  Mcs extends [StoreMutatorIdentifier, unknown][] = [],\n  UState = TState,\n>(\n  config: StateCreator<TState, [...Mps, ['temporal', unknown]], Mcs>,\n  options?: ZundoOptions<TState, UState>,\n) => StateCreator<\n  TState,\n  Mps,\n  [['temporal', StoreApi<TemporalState<UState>>], ...Mcs]\n>;\n\ndeclare module 'zustand/vanilla' {\n  interface StoreMutators<S, A> {\n    temporal: Write<S, { temporal: A }>;\n  }\n}\n\nconst zundoImpl =\n  <TState>(\n    config: StateCreator<TState, [], []>,\n    {\n      partialize = (state: TState) => state,\n      handleSet: userlandSetFactory = (handleSetCb) => handleSetCb,\n      ...restOptions\n    } = {} as ZundoOptions<TState>,\n  ): StateCreator<TState, [], []> =>\n  (set, get, _store) => {\n    type TState = ReturnType<typeof config>;\n    type StoreAddition = StoreApi<TemporalState<TState>>;\n\n    const temporalStore = createVanillaTemporal<TState>(set, get, {\n      partialize,\n      ...restOptions,\n    });\n\n    const store = _store as Mutate<\n      StoreApi<TState>,\n      [['temporal', StoreAddition]]\n    >;\n    const { setState } = store;\n\n    // TODO: should temporal be only temporalStore.getState()?\n    // We can hide the rest of the store in the secret internals.\n    store.temporal = temporalStore;\n\n    const curriedUserLandSet = userlandSetFactory(\n      temporalStore.getState().__internal.handleUserSet,\n    );\n\n    const modifiedSetState: typeof setState = (state, replace) => {\n      const pastState = partialize(get());\n      setState(state, replace);\n      curriedUserLandSet(pastState);\n    };\n    store.setState = modifiedSetState;\n\n    const modifiedSetter: typeof set = (state, replace) => {\n      // Get most up to date state. Should this be the same as the state in the callback?\n      const pastState = partialize(get());\n      set(state, replace);\n      curriedUserLandSet(pastState);\n    };\n\n    return config(modifiedSetter, get, _store);\n  };\n\nexport const temporal = zundoImpl as unknown as Zundo;\nexport type { ZundoOptions, Zundo, TemporalState };\n","import { createStore, type StoreApi } from 'zustand';\nimport type { TemporalStateWithInternals, WithRequired, ZundoOptions } from './types';\n\nexport const createVanillaTemporal = <TState>(\n  userSet: StoreApi<TState>['setState'],\n  userGet: StoreApi<TState>['getState'],\n  {\n    partialize,\n    equality,\n    onSave,\n    limit,\n  } = {} as Omit<WithRequired<ZundoOptions<TState>, | 'partialize'>, 'handleSet'>,\n) => {\n\n  return createStore<TemporalStateWithInternals<TState>>()((set, get) => {\n    return {\n      pastStates: [],\n      futureStates: [],\n      undo: (steps = 1) => {\n        const ps = get().pastStates.slice();\n        const fs = get().futureStates.slice();\n        if (ps.length === 0) {\n          return;\n        }\n\n        const skippedPastStates = ps.splice(ps.length - (steps - 1));\n        const pastState = ps.pop();\n        if (pastState) {\n          fs.push(partialize(userGet()));\n          userSet(pastState);\n        }\n\n        fs.push(...skippedPastStates.reverse());\n        set({ pastStates: ps, futureStates: fs });\n      },\n      redo: (steps = 1) => {\n        const ps = get().pastStates.slice();\n        const fs = get().futureStates.slice();\n        if (fs.length === 0) {\n          return;\n        }\n\n        const skippedFutureStates = fs.splice(fs.length - (steps - 1));\n        const futureState = fs.pop();\n        if (futureState) {\n          ps.push(partialize(userGet()));\n          userSet(futureState);\n        }\n\n        ps.push(...skippedFutureStates.reverse());\n        set({ pastStates: ps, futureStates: fs });\n      },\n      clear: () => {\n        set({ pastStates: [], futureStates: [] });\n      },\n      trackingStatus: 'tracking',\n      pause: () => {\n        set({ trackingStatus: 'paused' });\n      },\n      resume: () => {\n        set({ trackingStatus: 'tracking' });\n      },\n      setOnSave: (onSave) => {\n        set((state) => ({ __internal: { ...state.__internal, onSave } }));\n      },\n      __internal: {\n        onSave,\n        handleUserSet: (pastState) => {\n          const { trackingStatus, pastStates, __internal } = get();\n          const ps = pastStates.slice();\n          const currentState = partialize(userGet());\n          if (\n            trackingStatus === 'tracking' &&\n            !equality?.(currentState, pastState)\n          ) {\n            if (limit && ps.length >= limit) {\n              ps.shift();\n            }\n            ps.push(pastState);\n            __internal.onSave?.(pastState, currentState);\n            set({ pastStates: ps, futureStates: [] });\n          }\n        },\n      },\n    };\n  });\n};\n"],"mappings":"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","names":["onSave"]}