{
  "version": 3,
  "sources": ["../../../../../dom-helpers/esm/canUseDOM.js", "../../../../../dom-helpers/esm/addEventListener.js", "../../../../../dom-helpers/esm/removeEventListener.js", "../../../../../dom-helpers/esm/listen.js", "../../../../../dom-helpers/esm/ownerDocument.js", "../../../../../@restart/ui/esm/useRootClose.js", "../../../../../@restart/hooks/esm/useEventCallback.js", "../../../../../@restart/hooks/esm/useCommittedRef.js", "../../../../../dom-helpers/esm/contains.js", "../../../../../@restart/ui/esm/useClickOutside.js"],
  "sourcesContent": ["export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);", "/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;", "/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;", "import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;", "/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}", "import listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useEffect } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useClickOutside, { getRefTarget } from './useClickOutside';\nconst escapeKeyCode = 27;\nconst noop = () => {};\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, {\n  disabled,\n  clickTrigger\n} = {}) {\n  const onClose = onRootClose || noop;\n  useClickOutside(ref, onClose, {\n    disabled,\n    clickTrigger\n  });\n  const handleKeyUp = useEventCallback(e => {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref));\n\n    // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n    let currentEvent = (doc.defaultView || window).event;\n    const removeKeyupListener = listen(doc, 'keyup', e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      handleKeyUp(e);\n    });\n    return () => {\n      removeKeyupListener();\n    };\n  }, [ref, disabled, handleKeyUp]);\n}\nexport default useRootClose;", "import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}", "import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;", "/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}", "import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nconst noop = () => {};\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nexport const getRefTarget = ref => ref && ('current' in ref ? ref.current : ref);\nconst InitialTriggerEvents = {\n  click: 'mousedown',\n  mouseup: 'mousedown',\n  pointerup: 'pointerdown'\n};\n\n/**\n * The `useClickOutside` hook registers your callback on the document that fires\n * when a pointer event is registered outside of the provided ref or element.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onClickOutside\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useClickOutside(ref, onClickOutside = noop, {\n  disabled,\n  clickTrigger = 'click'\n} = {}) {\n  const preventMouseClickOutsideRef = useRef(false);\n  const waitingForTrigger = useRef(false);\n  const handleMouseCapture = useCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'ClickOutside captured a close event but does not have a ref to compare it to. ' + 'useClickOutside(), should be passed a ref that resolves to a DOM node');\n    preventMouseClickOutsideRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target) || waitingForTrigger.current;\n    waitingForTrigger.current = false;\n  }, [ref]);\n  const handleInitialMouse = useEventCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    if (currentTarget && contains(currentTarget, e.target)) {\n      waitingForTrigger.current = true;\n    }\n  });\n  const handleMouse = useEventCallback(e => {\n    if (!preventMouseClickOutsideRef.current) {\n      onClickOutside(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref));\n\n    // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n    let currentEvent = (doc.defaultView || window).event;\n    let removeInitialTriggerListener = null;\n    if (InitialTriggerEvents[clickTrigger]) {\n      removeInitialTriggerListener = listen(doc, InitialTriggerEvents[clickTrigger], handleInitialMouse, true);\n    }\n\n    // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n    const removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    const removeMouseListener = listen(doc, clickTrigger, e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      handleMouse(e);\n    });\n    let mobileSafariHackListeners = [];\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(el => listen(el, 'mousemove', noop));\n    }\n    return () => {\n      removeInitialTriggerListener == null ? void 0 : removeInitialTriggerListener();\n      removeMouseCaptureListener();\n      removeMouseListener();\n      mobileSafariHackListeners.forEach(remove => remove());\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleInitialMouse, handleMouse]);\n}\nexport default useClickOutside;"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_react", "warning", "noop"]
}
