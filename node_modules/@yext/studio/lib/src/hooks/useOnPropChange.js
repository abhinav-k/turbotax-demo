import { TypeGuards, } from "@yext/studio-plugin";
import { useCallback } from "react";
/**
 * A callback for handling an update to a prop.
 */
export default function useOnPropChange(propKind, propName, onPropChange, valueType) {
    return useCallback((value) => {
        const newPropVal = createPropVal(value, propKind, valueType);
        if (!newPropVal) {
            console.error(`Unable to update component's prop ${propName}. Invalid PropVal:`, newPropVal);
            return;
        }
        onPropChange(propName, newPropVal);
    }, [onPropChange, propKind, propName, valueType]);
}
function createPropVal(value, propKind, valueType) {
    const newPropVal = {
        kind: propKind,
        valueType,
        value,
    };
    if (!TypeGuards.isValidPropVal(newPropVal)) {
        return null;
    }
    return newPropVal;
}
//# sourceMappingURL=useOnPropChange.js.map