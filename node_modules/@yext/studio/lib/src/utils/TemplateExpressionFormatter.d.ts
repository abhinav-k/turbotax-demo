/**
 * TemplateExpressionFormatter contains various static utility methods
 * for formatting template expression strings.
 */
export default class TemplateExpressionFormatter {
    /**
     * Converts curly braces to square brackets where needed,
     * and removes backticks.
     */
    static getTemplateStringDisplayValue(value: string): string;
    /**
     * Converts square brackets to curly braces where needed,
     * and adds backticks.
     */
    static getRawValue(value: string): string;
    /**
     * Converts `[[<field>]]` usages into `${document.<field>}` and
     * `[[<field>[<num>]]]` to `${document.<field>[<num>]}`.
     */
    private static convertSquareBracketsToCurlyBraces;
    /**
     * Converts `${document.<field>}` usages into `[[field]]`.
     */
    static convertCurlyBracesToSquareBrackets(value: string): string;
    static addBackticks(value: string): string;
    private static removeBackticks;
    static hasBackticks(value: string): boolean;
}
//# sourceMappingURL=TemplateExpressionFormatter.d.ts.map