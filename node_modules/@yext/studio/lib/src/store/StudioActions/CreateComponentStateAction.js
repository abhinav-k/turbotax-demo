import { ComponentStateKind, FileMetadataKind, PropValueKind, PropValueType, } from "@yext/studio-plugin";
import path from "path-browserify";
import { v4 } from "uuid";
export default class CreateComponentStateAction {
    getStudioConfig;
    constructor(getStudioConfig) {
        this.getStudioConfig = getStudioConfig;
    }
    createComponentState = (metadata) => {
        const componentName = path.basename(metadata.filepath, ".tsx");
        const componentState = {
            kind: metadata.kind === FileMetadataKind.Module
                ? ComponentStateKind.Module
                : ComponentStateKind.Standard,
            componentName,
            props: metadata.initialProps ?? {},
            uuid: v4(),
            metadataUUID: metadata.metadataUUID,
        };
        const transformedState = this.transformProps(componentState);
        return transformedState;
    };
    transformProps(componentState) {
        if (componentState.kind === ComponentStateKind.Module &&
            this.getStudioConfig().isPagesJSRepo) {
            const documentProp = {
                kind: PropValueKind.Expression,
                valueType: PropValueType.Record,
                value: "document",
            };
            return {
                ...componentState,
                props: {
                    ...componentState.props,
                    document: documentProp,
                },
            };
        }
        return componentState;
    }
}
//# sourceMappingURL=CreateComponentStateAction.js.map