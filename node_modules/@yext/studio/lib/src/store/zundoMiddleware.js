import { isEqual } from "lodash";
import { temporal } from "zundo";
/**
 * Gets the part of the Studio store that a user can directly update through
 * the UI. In other words, it leaves out the parts of state that are only
 * indirectly modified by Studio components, such as the mapping of imported
 * components and the {@link PreviousSaveSlice}.
 */
function getUserUpdatableStore(store) {
    const { values } = store.siteSettings;
    const { UUIDToFileMetadata } = store.fileMetadatas;
    const { pages, activePageName, activeComponentUUID, moduleUUIDBeingEdited } = store.pages;
    return {
        siteSettings: {
            values,
        },
        fileMetadatas: {
            UUIDToFileMetadata,
        },
        pages: {
            pages,
            activePageName,
            activeComponentUUID,
            moduleUUIDBeingEdited,
        },
    };
}
const zundoOptions = {
    equality: (currStore, pastStore) => isEqual(getUserUpdatableStore(currStore), getUserUpdatableStore(pastStore)),
    partialize: (state) => {
        const { previousSave: _, ...remainingState } = state;
        return remainingState;
    },
};
export function addZundoMiddleware(storeCreator) {
    return temporal(storeCreator, zundoOptions);
}
//# sourceMappingURL=zundoMiddleware.js.map