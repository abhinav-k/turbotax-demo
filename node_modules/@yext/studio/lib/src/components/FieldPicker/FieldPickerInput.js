import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import useStudioStore from "../../store/useStudioStore";
import FieldPicker from "./FieldPicker";
import { useFuncWithZundoBatching } from "../../hooks/useFuncWithZundoBatching";
import filterEntityData from "../../utils/filterEntityData";
import classNames from "classnames";
/**
 * FieldPickerInput is a a text input element combined with a FieldPicker.
 */
export default function FieldPickerInput({ onInputChange, handleFieldSelection, displayValue, fieldFilter, }) {
    const entityData = useStudioStore((store) => store.pages.activeEntityData);
    const filteredData = filterEntityData(fieldFilter, entityData);
    const hasFilteredData = Object.keys(filteredData).length > 0;
    const inputBoxCssClasses = classNames("border border-gray-300 focus:border-indigo-500 rounded-lg py-2 pl-2 w-full", hasFilteredData ? "pr-8" : "pr-2");
    const onChange = useFuncWithZundoBatching(onInputChange);
    return (_jsxs("div", { className: "relative", children: [_jsx("input", { type: "text", onChange: onChange, className: inputBoxCssClasses, value: displayValue }), hasFilteredData && (_jsx("i", { className: "absolute right-0 top-2.5 mr-2 bg-white not-italic", children: _jsx(FieldPicker, { handleFieldSelection: handleFieldSelection, filteredEntityData: filteredData }) }))] }));
}
//# sourceMappingURL=FieldPickerInput.js.map