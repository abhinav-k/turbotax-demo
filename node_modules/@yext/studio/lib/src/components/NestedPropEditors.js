import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PropValueKind, PropValueType, } from "@yext/studio-plugin";
import { useCallback } from "react";
import PropEditors from "./PropEditors";
import { renderBranchUI } from "./PropEditor";
const EMPTY_PROP_VALUES = {};
export default function NestedPropEditors(props) {
    const { propValues = EMPTY_PROP_VALUES, propType, propName, updateSpecificProp, isNested, } = props;
    const updateObjectProp = useCallback((updatedPropValues) => {
        updateSpecificProp(propName, {
            kind: PropValueKind.Literal,
            valueType: PropValueType.Object,
            value: updatedPropValues,
        });
    }, [propName, updateSpecificProp]);
    return (_jsxs("div", { className: "flex", children: [renderBranchUI(isNested), _jsxs("div", { children: [_jsx("div", { className: "text-sm font-semibold mt-0.5 mb-1", children: propName }), _jsx(PropEditors, { propValues: propValues, propShape: propType.shape, updateProps: updateObjectProp, isNested: true })] })] }));
}
//# sourceMappingURL=NestedPropEditors.js.map