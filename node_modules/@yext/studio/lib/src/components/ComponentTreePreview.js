import { Fragment as _Fragment, jsx as _jsx } from "react/jsx-runtime";
import { useMemo } from "react";
import { ComponentTreeHelpers } from "@yext/studio-plugin";
import ErrorBoundary from "./common/ErrorBoundary";
import HighlightingContainer from "./HighlightingContainer";
import ComponentPreview from "./ComponentPreview";
/**
 * Renders the provided component tree.
 */
export default function ComponentTreePreview({ componentTree, expressionSources, renderHighlightingContainer = true, }) {
    const elements = useComponentTreeElements(componentTree, expressionSources, renderHighlightingContainer);
    return _jsx(_Fragment, { children: elements });
}
/**
 * Renders the component tree with props, where expressions
 * in prop values are replace with actual values.
 */
function useComponentTreeElements(componentTree, expressionSources, renderHighlightingContainer) {
    return useMemo(() => {
        return ComponentTreeHelpers.mapComponentTree(componentTree, (c, children) => {
            const renderedComponent = (_jsx(ComponentPreview, { componentState: c, expressionSources: expressionSources, childElements: children }));
            if (!renderHighlightingContainer) {
                return (_jsx(ErrorBoundary, { children: renderedComponent }, c.uuid));
            }
            return (_jsx(HighlightingContainer, { uuid: c.uuid, children: _jsx(ErrorBoundary, { children: renderedComponent }) }, c.uuid));
        });
    }, [componentTree, expressionSources, renderHighlightingContainer]);
}
//# sourceMappingURL=ComponentTreePreview.js.map