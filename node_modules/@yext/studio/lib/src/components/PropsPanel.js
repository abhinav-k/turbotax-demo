import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import useActiveComponentWithProps from "../hooks/useActiveComponentWithProps";
import ActiveComponentPropEditors from "./ActiveComponentPropEditors";
import { ComponentStateKind } from "@yext/studio-plugin";
import ModuleActions from "./ModuleActions";
import RepeaterPanel from "./RepeaterPanel";
import Divider from "./common/Divider";
/**
 * Renders prop editors for the active component selected by the user.
 */
export default function PropsPanel() {
    const activeComponentWithProps = useActiveComponentWithProps();
    if (!activeComponentWithProps) {
        return null;
    }
    const { activeComponentMetadata, activeComponentState, extractedComponentState, propShape, } = activeComponentWithProps;
    const isModule = extractedComponentState.kind === ComponentStateKind.Module;
    return (_jsxs(_Fragment, { children: [isModule && (_jsxs(_Fragment, { children: [_jsx(ModuleActions, { state: activeComponentState, metadata: activeComponentMetadata }), _jsx(Divider, {})] })), _jsx(ActiveComponentPropEditors, { activeComponentState: extractedComponentState, propShape: propShape }), _jsx(RepeaterPanel, {})] }));
}
//# sourceMappingURL=PropsPanel.js.map